const { User } = require('../models');
const bcrypt = require('bcrypt');

//유저 정보 조회
const getUserInfo = async (req, res) => {
    try {
       const nickname = req.userInfo.nickname
       const provider = req.userInfo.provider

       const userInfo = await User.findOne({
            where: { nickname:nickname, provider:provider }
       })
       res.send({
           nickname: userInfo.nickname,
           user_image: userInfo.user_image,
           user_mbti: userInfo.user_mbti
       })
    } catch (error) {
      console.log(error);
      res.status(400).send({
        errorMessage: '알 수 없는 오류가 발생했습니다. 관리자에게 문의해주세요.',
      });
    }
  };

const patchUserInfo = async(req, res) => {
    try {
        const nickname = req.userInfo.nickname
        const provider = req.userInfo.provider

        const resNickname = req.body.nickname
        const resUserImage = req.body.user_image
        const resUserMbti = req.body.user_mbti

        const userInfo = await User.findOne({
            where: { nickname:nickname, provider:provider }
       })
       await userInfo.update({ nickname:resNickname, user_image:resUserImage, user_mbti:resUserMbti })

    }catch(err){
        console.log(error);
      res.status(400).send({
        errorMessage: '알 수 없는 오류가 발생했습니다. 관리자에게 문의해주세요.',
      });
    }
}

const deleteUserInfo = async(req, res) => {
    try {
        const nickname = req.userInfo.nickname
        const provider = req.userInfo.provider

        const userInfo = await User.findOne({
            where: { nickname:nickname, provider:provider }
       })
       await userInfo.update({})

    }catch(err){
        console.log(error);
      res.status(400).send({
        errorMessage: '알 수 없는 오류가 발생했습니다. 관리자에게 문의해주세요.',
      });
    }
}

  module.exports = {
    getUserInfo,
    patchUserInfo,
    deleteUserInfo,
  };
  